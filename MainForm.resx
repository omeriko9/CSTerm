<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>